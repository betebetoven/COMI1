
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Collections;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Analizador_sintactico2 extends java_cup.runtime.lr_parser {
    public static listaenlazada stackER = new listaenlazada();
    public static ArrayList<String> rawlist = new ArrayList<>();
    public static ArrayList<String> r ;
    public static void rec()
    {
        for (int i = 0; i < r.size(); i++) {
            if (r.get(i).equals("+") ||  r.get(i).equals("*") || r.get(i).equals("?"))
            {
                String str = r.get(i-1);
                r.set(i-1,str+r.get(i));
                r.remove(i);
                rec();
                break;
            }
            else if (r.get(i).equals("|")) {
                String str = r.get(i-2);
                r.set(i-2,"("+str+r.get(i)+r.get(i-1)+")");
                r.remove(i);
                r.remove(i-1);
                rec();
                break;
            }
            else if (r.get(i).equals(".")) {
                String str = r.get(i-2);
                r.set(i-2,r.get(i-1)+str);
                r.remove(i);
                r.remove(i-1);
                rec();
                break;


            }


        }

    }

 public final Class getSymbolContainer() {
    return Simbolos2.class;
}

  /** Default constructor. */
  @Deprecated
  public Analizador_sintactico2() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Analizador_sintactico2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Analizador_sintactico2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\013\000\002\002\004\000\002\002\003\000\002\003" +
    "\004\000\002\003\003\000\002\004\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\015\000\020\004\004\005\005\006\012\007\010\010" +
    "\014\011\013\012\011\001\002\000\022\002\ufffd\004\ufffd" +
    "\005\ufffd\006\ufffd\007\ufffd\010\ufffd\011\ufffd\012\ufffd\001" +
    "\002\000\022\002\ufffc\004\ufffc\005\ufffc\006\ufffc\007\ufffc" +
    "\010\ufffc\011\ufffc\012\ufffc\001\002\000\022\002\ufffe\004" +
    "\ufffe\005\ufffe\006\ufffe\007\ufffe\010\ufffe\011\ufffe\012\ufffe" +
    "\001\002\000\004\002\017\001\002\000\022\002\ufffa\004" +
    "\ufffa\005\ufffa\006\ufffa\007\ufffa\010\ufffa\011\ufffa\012\ufffa" +
    "\001\002\000\022\002\ufff7\004\ufff7\005\ufff7\006\ufff7\007" +
    "\ufff7\010\ufff7\011\ufff7\012\ufff7\001\002\000\022\002\ufffb" +
    "\004\ufffb\005\ufffb\006\ufffb\007\ufffb\010\ufffb\011\ufffb\012" +
    "\ufffb\001\002\000\022\002\ufff8\004\ufff8\005\ufff8\006\ufff8" +
    "\007\ufff8\010\ufff8\011\ufff8\012\ufff8\001\002\000\022\002" +
    "\ufff9\004\ufff9\005\ufff9\006\ufff9\007\ufff9\010\ufff9\011\ufff9" +
    "\012\ufff9\001\002\000\022\002\000\004\004\005\005\006" +
    "\012\007\010\010\014\011\013\012\011\001\002\000\022" +
    "\002\uffff\004\uffff\005\uffff\006\uffff\007\uffff\010\uffff\011" +
    "\uffff\012\uffff\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\015\000\010\002\006\003\014\004\005\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\015" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Analizador_sintactico2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Analizador_sintactico2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Analizador_sintactico2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

             
    }

/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Analizador_sintactico2$actions {
  private final Analizador_sintactico2 parser;

  /** Constructor */
  CUP$Analizador_sintactico2$actions(Analizador_sintactico2 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Analizador_sintactico2$do_action_part00000000(
    int                        CUP$Analizador_sintactico2$act_num,
    java_cup.runtime.lr_parser CUP$Analizador_sintactico2$parser,
    java.util.Stack            CUP$Analizador_sintactico2$stack,
    int                        CUP$Analizador_sintactico2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Analizador_sintactico2$result;

      /* select the action based on the action number */
      switch (CUP$Analizador_sintactico2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.elementAt(CUP$Analizador_sintactico2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.elementAt(CUP$Analizador_sintactico2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.elementAt(CUP$Analizador_sintactico2$top-1)).value;
		RESULT = start_val;
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.elementAt(CUP$Analizador_sintactico2$top-1)), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Analizador_sintactico2$parser.done_parsing();
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= E 
            {
              Object RESULT =null;
		 Collections.reverse(rawlist);r = rawlist;
rec();
 FileWriter myWriter = new FileWriter("./ERS2.txt");
                                                              myWriter.write(r.get(0));
                                                              myWriter.close();

                                                        analizador_lexico3 lexico = new analizador_lexico3(new BufferedReader(new FileReader("./ERS2.txt")));
                                                        Analizador_sintactico3 sintactico = new Analizador_sintactico3(lexico);
                                                        sintactico.parse();
System.out.println(r.get(0));rawlist.clear();
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // E ::= E ersim 
            {
              Object RESULT =null;

              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("E",1, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.elementAt(CUP$Analizador_sintactico2$top-1)), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // E ::= ersim 
            {
              Object RESULT =null;

              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("E",1, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ersim ::= frase 
            {
              Object RESULT =null;
		int fraseleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int fraseright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object frase = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(frase));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ersim ::= o 
            {
              Object RESULT =null;
		int oleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(o));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ersim ::= declaracion 
            {
              Object RESULT =null;
		int declaracionleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int declaracionright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object declaracion = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(declaracion));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ersim ::= punto 
            {
              Object RESULT =null;
		int puntoleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int puntoright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object punto = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(punto));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ersim ::= mas 
            {
              Object RESULT =null;
		int masleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int masright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object mas = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(mas));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ersim ::= asterisco 
            {
              Object RESULT =null;
		int asteriscoleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int asteriscoright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object asterisco = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(asterisco));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ersim ::= pregunta 
            {
              Object RESULT =null;
		int preguntaleft = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).left;
		int preguntaright = ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()).right;
		Object pregunta = (Object)((java_cup.runtime.Symbol) CUP$Analizador_sintactico2$stack.peek()).value;
		rawlist.add(String.valueOf(pregunta));
              CUP$Analizador_sintactico2$result = parser.getSymbolFactory().newSymbol("ersim",2, ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analizador_sintactico2$stack.peek()), RESULT);
            }
          return CUP$Analizador_sintactico2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Analizador_sintactico2$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Analizador_sintactico2$do_action(
    int                        CUP$Analizador_sintactico2$act_num,
    java_cup.runtime.lr_parser CUP$Analizador_sintactico2$parser,
    java.util.Stack            CUP$Analizador_sintactico2$stack,
    int                        CUP$Analizador_sintactico2$top)
    throws java.lang.Exception
    {
              return CUP$Analizador_sintactico2$do_action_part00000000(
                               CUP$Analizador_sintactico2$act_num,
                               CUP$Analizador_sintactico2$parser,
                               CUP$Analizador_sintactico2$stack,
                               CUP$Analizador_sintactico2$top);
    }
}

}
